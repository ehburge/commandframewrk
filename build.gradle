///*
// * This file was generated by the Gradle 'init' task.
// *
// * This generated file contains a sample Java project to get you started.
// * For more details take a look at the Java Quickstart chapter in the Gradle
// * User Manual available at https://docs.gradle.org/6.2.2/userguide/tutorial_java_projects.html
// */
//
//buildscript {
//    ext {
//        springBootVersion = '2.3.0.BUILD-SNAPSHOT'
//    }
//    repositories {
//        mavenCentral()
//        maven { url 'https://repo.spring.io/milestone' }
//        maven { url 'https://repo.spring.io/snapshot' }
//    }
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//    }
//}
//
////apply plugin: 'org.springframework.boot'
//
//plugins {
//    // Apply the java plugin to add support for Java
//    id 'java'
//    id 'io.springframework.boot' version '2.3.0.BUILD-SNAPSHOT'
//    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
//    id "io.freefair.lombok" version "5.0.0"
//}
//
//
//repositories {
//    jcenter()
//    mavenCentral()
//}

plugins {
    id 'org.springframework.boot' version '2.6.2'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    mapstructVersion = "1.5.+"
    lombokVersion = "1.18.22"
    lombokMapstructBindingVersion = "0.2.0"
}
//group 'org.hexappdomain'
//version = '0.0.1-SNAPSHOT'
//sourceCompatibility = 17

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}
//
//allprojects {
//    repositories {
//        mavenCentral()
//        jcenter()
//        maven { url 'https://repo.spring.io/milestone' }
//        maven { url 'https://repo.spring.io/snapshot' }
//    }
//}
configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
}
apply from: 'build-integration.gradle'

dependencies {

    implementation project(':thingapp')
    implementation project(':thingdomain')
    implementation project(':thingappdommapping')
    implementation project(':frmwrk-eventer-mapping')

    implementation 'org.springframework.boot:spring-boot-starter-artemis'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jetty'


    testImplementation 'com.h2database:h2:2.0.204'
    runtimeOnly 'com.h2database:h2'
    //runtimeOnly 'org.postgresql:postgresql'

//    testImplementation('org.springframework.boot:spring-boot-starter-test') {
//        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//    }
    //testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'


    implementation 'com.google.inject:guice:5.0.1'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
